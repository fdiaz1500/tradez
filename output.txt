Removing network enterprise-scale-crypto-trading_test-network
Network enterprise-scale-crypto-trading_test-network not found.
db-test uses an image, skipping
redis-test uses an image, skipping
Building backend-test
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.test
#1 transferring dockerfile: 310B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/5] FROM docker.io/library/node:18-alpine@sha256:e0340f26173b41066d68e3fe9bfbdb6571ab3cad0a4272919a52e36f4ae56925
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 406.29kB 0.0s done
#5 DONE 0.0s

#6 [2/5] WORKDIR /app
#6 CACHED

#7 [3/5] COPY package*.json ./
#7 CACHED

#8 [4/5] RUN npm install
#8 CACHED

#9 [5/5] COPY . .
#9 DONE 0.1s

#10 exporting to image
#10 exporting layers
#10 exporting layers 1.0s done
#10 writing image sha256:cd8957367607ee7776584d8e0683ebf6489a5eabaa0c05adecf23ab5268b05e8 done
#10 naming to docker.io/library/enterprise-scale-crypto-trading_backend-test done
#10 DONE 1.0s
Creating network "enterprise-scale-crypto-trading_test-network" with driver "bridge"
Creating enterprise-scale-crypto-trading_db-test_1 ... 
Creating enterprise-scale-crypto-trading_redis-test_1 ... 
Creating enterprise-scale-crypto-trading_db-test_1    ... done
Creating enterprise-scale-crypto-trading_redis-test_1 ... done
Creating enterprise-scale-crypto-trading_backend-test_1 ... 
Creating enterprise-scale-crypto-trading_backend-test_1 ... done
Attaching to enterprise-scale-crypto-trading_db-test_1, enterprise-scale-crypto-trading_redis-test_1, enterprise-scale-crypto-trading_backend-test_1
[33mdb-test_1       |[0m The files belonging to this database system will be owned by user "postgres".
[33mdb-test_1       |[0m This user must also own the server process.
[33mdb-test_1       |[0m 
[32mredis-test_1    |[0m 1:C 17 Mar 2025 23:02:08.409 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
[32mredis-test_1    |[0m 1:C 17 Mar 2025 23:02:08.409 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
[32mredis-test_1    |[0m 1:C 17 Mar 2025 23:02:08.409 * Redis version=7.4.2, bits=64, commit=00000000, modified=0, pid=1, just started
[32mredis-test_1    |[0m 1:C 17 Mar 2025 23:02:08.409 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
[33mdb-test_1       |[0m The database cluster will be initialized with locale "en_US.utf8".
[33mdb-test_1       |[0m The default database encoding has accordingly been set to "UTF8".
[33mdb-test_1       |[0m The default text search configuration will be set to "english".
[33mdb-test_1       |[0m 
[33mdb-test_1       |[0m Data page checksums are disabled.
[33mdb-test_1       |[0m 
[32mredis-test_1    |[0m 1:M 17 Mar 2025 23:02:08.410 * monotonic clock: POSIX clock_gettime
[33mdb-test_1       |[0m fixing permissions on existing directory /var/lib/postgresql/data ... ok
[32mredis-test_1    |[0m 1:M 17 Mar 2025 23:02:08.411 * Running mode=standalone, port=6379.
[33mdb-test_1       |[0m creating subdirectories ... ok
[32mredis-test_1    |[0m 1:M 17 Mar 2025 23:02:08.412 * Server initialized
[32mredis-test_1    |[0m 1:M 17 Mar 2025 23:02:08.412 * Ready to accept connections tcp
[33mdb-test_1       |[0m selecting dynamic shared memory implementation ... posix
[33mdb-test_1       |[0m selecting default max_connections ... 100
[33mdb-test_1       |[0m selecting default shared_buffers ... 128MB
[33mdb-test_1       |[0m selecting default time zone ... UTC
[33mdb-test_1       |[0m creating configuration files ... ok
[33mdb-test_1       |[0m running bootstrap script ... ok
[33mdb-test_1       |[0m performing post-bootstrap initialization ... sh: locale: not found
[33mdb-test_1       |[0m 2025-03-17 23:02:09.165 UTC [35] WARNING:  no usable system locales were found
[33mdb-test_1       |[0m ok
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m > crypto-exchange-backend@1.0.0 test
[36mbackend-test_1  |[0m > jest
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m PASS tests/unit/utils/ApiError.test.js
[36mbackend-test_1  |[0m   ApiError
[36mbackend-test_1  |[0m     ✓ should create an error with default values (13 ms)
[36mbackend-test_1  |[0m     ✓ should create an error with custom statusCode
[36mbackend-test_1  |[0m     ✓ should create an error with custom isOperational flag (1 ms)
[36mbackend-test_1  |[0m     ✓ should create an error with custom stack (1 ms)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   console.log
[36mbackend-test_1  |[0m     Server running on port 4000
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at Server.log (src/index.js:109:11)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   console.error
[36mbackend-test_1  |[0m     Database connection error: Error: connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m         at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1555:16)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       28 | pool.query('SELECT NOW()', (err, res) => {
[36mbackend-test_1  |[0m       29 |   if (err) {
[36mbackend-test_1  |[0m     > 30 |     console.error('Database connection error:', err.stack);
[36mbackend-test_1  |[0m          |             ^
[36mbackend-test_1  |[0m       31 |   } else {
[36mbackend-test_1  |[0m       32 |     console.log('Database connected successfully');
[36mbackend-test_1  |[0m       33 |   }
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at error (src/index.js:30:13)
[36mbackend-test_1  |[0m       at PendingItem.callback (node_modules/pg-pool/index.js:405:16)
[36mbackend-test_1  |[0m       at Client._connectionCallback (node_modules/pg-pool/index.js:258:23)
[36mbackend-test_1  |[0m       at Client._handleErrorWhileConnecting (node_modules/pg/lib/client.js:336:19)
[36mbackend-test_1  |[0m       at Client._handleErrorEvent (node_modules/pg/lib/client.js:346:19)
[36mbackend-test_1  |[0m       at Socket.reportStreamError (node_modules/pg/lib/connection.js:57:12)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   console.log
[36mbackend-test_1  |[0m     Redis client connected
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at Commander.log (src/index.js:52:13)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m FAIL tests/integration/routes/auth.routes.test.js
[36mbackend-test_1  |[0m   ● Auth Routes › POST /api/auth/login › should login successfully with valid credentials
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m     connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       14 |  */
[36mbackend-test_1  |[0m       15 | async function initTestDB() {
[36mbackend-test_1  |[0m     > 16 |   const client = await pool.connect();
[36mbackend-test_1  |[0m          |                  ^
[36mbackend-test_1  |[0m       17 |   try {
[36mbackend-test_1  |[0m       18 |     // Start a transaction
[36mbackend-test_1  |[0m       19 |     await client.query('BEGIN');
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at node_modules/pg-pool/index.js:45:11
[36mbackend-test_1  |[0m       at Object.initTestDB (tests/helpers/db.js:16:18)
[36mbackend-test_1  |[0m       at Object.<anonymous> (tests/integration/routes/auth.routes.test.js:6:5)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   ● Auth Routes › POST /api/auth/login › should return 401 with invalid credentials
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m     connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       14 |  */
[36mbackend-test_1  |[0m       15 | async function initTestDB() {
[36mbackend-test_1  |[0m     > 16 |   const client = await pool.connect();
[36mbackend-test_1  |[0m          |                  ^
[36mbackend-test_1  |[0m       17 |   try {
[36mbackend-test_1  |[0m       18 |     // Start a transaction
[36mbackend-test_1  |[0m       19 |     await client.query('BEGIN');
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at node_modules/pg-pool/index.js:45:11
[36mbackend-test_1  |[0m       at Object.initTestDB (tests/helpers/db.js:16:18)
[36mbackend-test_1  |[0m       at Object.<anonymous> (tests/integration/routes/auth.routes.test.js:6:5)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   ● Auth Routes › POST /api/auth/login › should return validation error with missing credentials
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m     connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       14 |  */
[36mbackend-test_1  |[0m       15 | async function initTestDB() {
[36mbackend-test_1  |[0m     > 16 |   const client = await pool.connect();
[36mbackend-test_1  |[0m          |                  ^
[36mbackend-test_1  |[0m       17 |   try {
[36mbackend-test_1  |[0m       18 |     // Start a transaction
[36mbackend-test_1  |[0m       19 |     await client.query('BEGIN');
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at node_modules/pg-pool/index.js:45:11
[36mbackend-test_1  |[0m       at Object.initTestDB (tests/helpers/db.js:16:18)
[36mbackend-test_1  |[0m       at Object.<anonymous> (tests/integration/routes/auth.routes.test.js:6:5)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   ● Auth Routes › POST /api/auth/register › should register a new user successfully
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m     connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       14 |  */
[36mbackend-test_1  |[0m       15 | async function initTestDB() {
[36mbackend-test_1  |[0m     > 16 |   const client = await pool.connect();
[36mbackend-test_1  |[0m          |                  ^
[36mbackend-test_1  |[0m       17 |   try {
[36mbackend-test_1  |[0m       18 |     // Start a transaction
[36mbackend-test_1  |[0m       19 |     await client.query('BEGIN');
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at node_modules/pg-pool/index.js:45:11
[36mbackend-test_1  |[0m       at Object.initTestDB (tests/helpers/db.js:16:18)
[36mbackend-test_1  |[0m       at Object.<anonymous> (tests/integration/routes/auth.routes.test.js:6:5)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   ● Auth Routes › POST /api/auth/register › should return 409 if email already exists
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m     connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       14 |  */
[36mbackend-test_1  |[0m       15 | async function initTestDB() {
[36mbackend-test_1  |[0m     > 16 |   const client = await pool.connect();
[36mbackend-test_1  |[0m          |                  ^
[36mbackend-test_1  |[0m       17 |   try {
[36mbackend-test_1  |[0m       18 |     // Start a transaction
[36mbackend-test_1  |[0m       19 |     await client.query('BEGIN');
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at node_modules/pg-pool/index.js:45:11
[36mbackend-test_1  |[0m       at Object.initTestDB (tests/helpers/db.js:16:18)
[36mbackend-test_1  |[0m       at Object.<anonymous> (tests/integration/routes/auth.routes.test.js:6:5)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   ● Auth Routes › POST /api/auth/register › should return validation error with invalid data
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m     connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       14 |  */
[36mbackend-test_1  |[0m       15 | async function initTestDB() {
[36mbackend-test_1  |[0m     > 16 |   const client = await pool.connect();
[36mbackend-test_1  |[0m          |                  ^
[36mbackend-test_1  |[0m       17 |   try {
[36mbackend-test_1  |[0m       18 |     // Start a transaction
[36mbackend-test_1  |[0m       19 |     await client.query('BEGIN');
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at node_modules/pg-pool/index.js:45:11
[36mbackend-test_1  |[0m       at Object.initTestDB (tests/helpers/db.js:16:18)
[36mbackend-test_1  |[0m       at Object.<anonymous> (tests/integration/routes/auth.routes.test.js:6:5)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   ● Auth Routes › POST /api/auth/logout › should logout successfully
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m     connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       14 |  */
[36mbackend-test_1  |[0m       15 | async function initTestDB() {
[36mbackend-test_1  |[0m     > 16 |   const client = await pool.connect();
[36mbackend-test_1  |[0m          |                  ^
[36mbackend-test_1  |[0m       17 |   try {
[36mbackend-test_1  |[0m       18 |     // Start a transaction
[36mbackend-test_1  |[0m       19 |     await client.query('BEGIN');
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at node_modules/pg-pool/index.js:45:11
[36mbackend-test_1  |[0m       at Object.initTestDB (tests/helpers/db.js:16:18)
[36mbackend-test_1  |[0m       at Object.<anonymous> (tests/integration/routes/auth.routes.test.js:6:5)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   ● Auth Routes › POST /api/auth/logout › should return 200 even without authentication
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m     connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       14 |  */
[36mbackend-test_1  |[0m       15 | async function initTestDB() {
[36mbackend-test_1  |[0m     > 16 |   const client = await pool.connect();
[36mbackend-test_1  |[0m          |                  ^
[36mbackend-test_1  |[0m       17 |   try {
[36mbackend-test_1  |[0m       18 |     // Start a transaction
[36mbackend-test_1  |[0m       19 |     await client.query('BEGIN');
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at node_modules/pg-pool/index.js:45:11
[36mbackend-test_1  |[0m       at Object.initTestDB (tests/helpers/db.js:16:18)
[36mbackend-test_1  |[0m       at Object.<anonymous> (tests/integration/routes/auth.routes.test.js:6:5)
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m   ● Test suite failed to run
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m     connect ECONNREFUSED ::1:5432
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       94 |  */
[36mbackend-test_1  |[0m       95 | async function cleanTestDB() {
[36mbackend-test_1  |[0m     > 96 |   const client = await pool.connect();
[36mbackend-test_1  |[0m          |                  ^
[36mbackend-test_1  |[0m       97 |   try {
[36mbackend-test_1  |[0m       98 |     await client.query('BEGIN');
[36mbackend-test_1  |[0m       99 |     
[36mbackend-test_1  |[0m 
[36mbackend-test_1  |[0m       at node_modules/pg-pool/index.js:45:11
[36mbackend-test_1  |[0m       at Object.cleanTestDB (tests/helpers/db.js:96:18)
[36mbackend-test_1  |[0m       at Object.<anonymous> (tests/integration/routes/auth.routes.test.js:10:5)
[36mbackend-test_1  |[0m 
[33mdb-test_1       |[0m syncing data to disk ... ok
[33mdb-test_1       |[0m 
[33mdb-test_1       |[0m 
[33mdb-test_1       |[0m Success. You can now start the database server using:
[33mdb-test_1       |[0m 
[33mdb-test_1       |[0m     pg_ctl -D /var/lib/postgresql/data -l logfile start
[33mdb-test_1       |[0m 
[33mdb-test_1       |[0m initdb: warning: enabling "trust" authentication for local connections
[33mdb-test_1       |[0m You can change this by editing pg_hba.conf or using the option -A, or
[33mdb-test_1       |[0m --auth-local and --auth-host, the next time you run initdb.
[33mdb-test_1       |[0m waiting for server to start....2025-03-17 23:02:13.912 UTC [41] LOG:  starting PostgreSQL 14.17 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
[33mdb-test_1       |[0m 2025-03-17 23:02:13.916 UTC [41] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
[33mdb-test_1       |[0m 2025-03-17 23:02:13.925 UTC [42] LOG:  database system was shut down at 2025-03-17 23:02:09 UTC
[33mdb-test_1       |[0m 2025-03-17 23:02:13.956 UTC [41] LOG:  database system is ready to accept connections
[33mdb-test_1       |[0m  done
[33mdb-test_1       |[0m server started
[36mbackend-test_1  |[0m A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
[36mbackend-test_1  |[0m ---------------------|---------|----------|---------|---------|--------------------------------------
[36mbackend-test_1  |[0m File                 | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                    
[36mbackend-test_1  |[0m ---------------------|---------|----------|---------|---------|--------------------------------------
[36mbackend-test_1  |[0m All files            |   23.75 |     18.9 |   11.11 |   23.79 |                                      
[36mbackend-test_1  |[0m  src                 |      80 |       50 |   57.14 |      80 |                                      
[36mbackend-test_1  |[0m   index.js           |      80 |       50 |   57.14 |      80 | 32,48,101,117-130                    
[36mbackend-test_1  |[0m  src/config          |   63.63 |    76.08 |       0 |   63.63 |                                      
[36mbackend-test_1  |[0m   index.js           |   63.63 |    76.08 |       0 |   63.63 | 79,92-94                             
[36mbackend-test_1  |[0m  src/middleware      |   16.21 |        0 |   14.28 |   16.43 |                                      
[36mbackend-test_1  |[0m   auth.js            |   14.81 |        0 |      20 |   14.81 | 11-90,100-110,118,129-139            
[36mbackend-test_1  |[0m   errorHandler.js    |      20 |        0 |       0 |   21.05 | 9-47                                 
[36mbackend-test_1  |[0m  src/routes          |   21.45 |        0 |       0 |   21.45 |                                      
[36mbackend-test_1  |[0m   auth.routes.js     |   16.41 |        0 |       0 |   16.41 | 31-119,136-211,222-252               
[36mbackend-test_1  |[0m   index.js           |   88.88 |      100 |       0 |   88.88 | 13,31                                
[36mbackend-test_1  |[0m   market.routes.js   |   27.58 |        0 |       0 |   27.58 | 13-28,38-55,65-88                    
[36mbackend-test_1  |[0m   trading.routes.js  |    19.6 |        0 |       0 |    19.6 | 25-53,64-94,104-124,141-184          
[36mbackend-test_1  |[0m   user.routes.js     |   12.24 |        0 |       0 |   12.24 | 15-45,62-147,170-220,231-254,268-312 
[36mbackend-test_1  |[0m   wallet.routes.js   |   20.37 |        0 |       0 |   20.37 | 13-14,23-37,47-70,91-121,132-146     
[36mbackend-test_1  |[0m  src/services        |    3.12 |        0 |       0 |    3.12 |                                      
[36mbackend-test_1  |[0m   trading.service.js |       0 |        0 |       0 |       0 | 1-242                                
[36mbackend-test_1  |[0m   wallet.service.js  |    6.55 |        0 |       0 |    6.55 | 7-187                                
[36mbackend-test_1  |[0m  src/utils           |   47.05 |    45.45 |   33.33 |   47.05 |                                      
[36mbackend-test_1  |[0m   ApiError.js        |     100 |      100 |     100 |     100 |                                      
[36mbackend-test_1  |[0m   logger.js          |       0 |        0 |       0 |       0 | 1-42                                 
[36mbackend-test_1  |[0m ---------------------|---------|----------|---------|---------|--------------------------------------
[36mbackend-test_1  |[0m Test Suites: 1 failed, 1 passed, 2 total
[36mbackend-test_1  |[0m Tests:       8 failed, 4 passed, 12 total
[36mbackend-test_1  |[0m Snapshots:   0 total
[36mbackend-test_1  |[0m Time:        3.954 s
[36mbackend-test_1  |[0m Ran all test suites.
[33mdb-test_1       |[0m CREATE DATABASE
[33mdb-test_1       |[0m 
[33mdb-test_1       |[0m 
[33mdb-test_1       |[0m /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/init.sql
[33mdb-test_1       |[0m CREATE EXTENSION
[33mdb-test_1       |[0m CREATE TABLE
[36menterprise-scale-crypto-trading_backend-test_1 exited with code 1
[0mStopping enterprise-scale-crypto-trading_redis-test_1   ... 
Stopping enterprise-scale-crypto-trading_db-test_1      ... 
Stopping enterprise-scale-crypto-trading_redis-test_1   ... done
Stopping enterprise-scale-crypto-trading_db-test_1      ... done
1
Aborting on container exit...
Removing enterprise-scale-crypto-trading_backend-test_1 ... 
Removing enterprise-scale-crypto-trading_redis-test_1   ... 
Removing enterprise-scale-crypto-trading_db-test_1      ... 
Removing enterprise-scale-crypto-trading_redis-test_1   ... done
Removing enterprise-scale-crypto-trading_db-test_1      ... done
Removing enterprise-scale-crypto-trading_backend-test_1 ... done
Removing network enterprise-scale-crypto-trading_test-network
